<%--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2012, 2014 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
--%>
<%-- 
  *****
  * This JSP file initializes the solr search
  *****
--%>
<!-- BEGIN SearchSetup.jspf--> 
<%@ page trimDirectiveWhitespaces="true" %>
<%@page import="org.apache.solr.client.solrj.response.SpellCheckResponse"%>
<%@page import="org.apache.solr.client.solrj.response.QueryResponse"%>
<%@page import="org.apache.solr.common.SolrDocumentList"%>
<%@page import="java.util.HashMap"%>
<%@page import="java.util.List"%>
<%@page import="java.util.Map"%>
<%@page import="com.ibm.commerce.registry.StoreCopy"%>
<%@page import="com.ibm.commerce.registry.StoreRegistry"%>
<%@page import="com.ibm.commerce.catalog.facade.datatypes.CatalogNavigationViewType"%>
<%@page import="com.ibm.commerce.foundation.internal.server.services.search.util.SpecialCharacterHelper"%>
<%@page import="com.ibm.commerce.datatype.WcParam" %>
<%@page import="com.ibm.commerce.foundation.internal.server.services.search.config.solr.SolrSearchConfigurationRegistry"%>
<%@page import="java.net.URLEncoder" %>

<%@ include file="/Widgets-ecocea/Common/Target2SellRanking_Data.jspf"%>
<c:if test="${empty includedSearchSetupJSPF}">
	<%--ECOCEA: searchSetup est appelé plusieurs fois par page à différents endroits. Pour être sûr on récupère ici le sortBy du cookie --%>
	<%--0000236: [Règle de tri] les règles de tri doivent s'appliquer sur toutes les familles et ce pour une même session --%>
	<c:if test="${empty sortBy}">
		<c:set var="productSortBySelected" value="${!empty cookie['productSortBySelected'] ? cookie['productSortBySelected'].value:''}"/>
			<c:if test="${!empty productSortBySelected}">
			<c:set var="sortBy" value="${productSortBySelected}" scope="request"/>
		</c:if>
	</c:if>

	<%
		WcParam wcp = (WcParam)request.getAttribute("WCParam");
		//Mantis 2285: encoder le searchTerm pour faire l'appel au search pour savoir si c'est un partnumber
		if(wcp != null && wcp.get("searchTerm") != null){
				String encodedSearchTerm = (String) wcp.get("searchTerm");
				encodedSearchTerm = URLEncoder.encode(encodedSearchTerm,"UTF-8");
				request.setAttribute("encodedSearchTerm",encodedSearchTerm);
		}
		// need to check if the responseSearchTerm attribute is set in the request object by the SearchDisplayCmd
		// if the original search term is enclosed by quotes, the modified search term will be set as this request attribute and pass to this view.	
		Object searchTerm = request.getAttribute("responseSearchTerm");
		if (searchTerm == null) {
			searchTerm = wcp.get("searchTerm");
			//if searchterm is still null it is because the search is based on the manufacturer
			if(searchTerm == null){
				searchTerm = wcp.get("manufacturer");
			}
			request.setAttribute("responseSearchTerm",searchTerm);
		}

			request.setAttribute("intentSearchTerm"
				,SpecialCharacterHelper
				.escapeDollar(searchTerm));
			
			request.setAttribute("handledSearchTerm"
				,SpecialCharacterHelper
				.escapeDollar(searchTerm));

			request.setAttribute("handledFilterTerm"
				,SpecialCharacterHelper
				.escapeDollar(wcp.get("filterTerm")));

			request.setAttribute("handledManufacturer"
				,SpecialCharacterHelper
				.escapeDollar(wcp.get("manufacturer")));
				
			request.setAttribute("handledAdvancedFacetList"
				,SpecialCharacterHelper
			.escapeDollar(wcp.get("advancedFacetList")));	
				
			String trackingThreshold = SolrSearchConfigurationRegistry
					.getInstance().getExtendedConfigurationPropertyValue(
							"SearchStatisticsResultPagesTrackingThreshold");
			if (trackingThreshold != null && trackingThreshold.length() > 0) {
				request.setAttribute("statisticsResultPagesTrackingThreshold", trackingThreshold);
			}
			
			String escapePatternsStr = SolrSearchConfigurationRegistry
					.getInstance().getExtendedConfigurationPropertyValue(
							"EscapePatterns");	
			if (escapePatternsStr != null && escapePatternsStr.length() > 0) {
				request.setAttribute("escapePatternsStr", escapePatternsStr);
			}	
	%>
	<%--ECOCEA: ne pas supprimer: permet de ne pas faire plusieurs fois les appels au search si la JSP est inclue plusieurs fois dans la page --%>
	<c:set var="includedSearchSetupJSPF" value="includedSearchSetupJSPF" scope="request"/>

	<c:if test="${!empty WCParam.searchTerm && empty WCParam.facet && empty WCParam.metaData}">
		<c:set var="updatedSearchTermHistory" value="${WCParam.searchTerm}" scope="request"/>
	</c:if>

	<c:if test="${!empty encodedSearchTerm}">
		<%-- ECOCEA : Check if the searchTerm is a PartNumber , zeropadding if required --%>
		<c:set var="paddedTerm" value="${ecocea:getPaddedSku(encodedSearchTerm)}" />
		<c:if test="${!empty paddedTerm }">
			<wcf:rest var="productDetails" url="${searchHostNamePath}${searchContextPath}/store/${storeId}/productview/${paddedTerm}">
				<wcf:param name="langId" value="${langId}"/>
				<wcf:param name="currency" value="${env_currencyCode}"/>
				<wcf:param name="responseFormat" value="json"/>		
				<wcf:param name="catalogId" value="${WCParam.catalogId}"/>	
				<%--ECOCEA Perf: on a besoin du minimum d'info à ce niveau là. juste savoir si le product existe. => IBM_findProductByPartNumber_Summary --%>
				<wcf:param name="profileName" value="IBM_findProductByPartNumber_Summary" />
			</wcf:rest>
		</c:if>		
		<c:if test="${!empty productDetails.catalogEntryView}" >
			<wcf:url var="catEntryDisplayUrl" patternName="ProductURL" value="Product1">
				<wcf:param name="catalogId" value="${catalogId}"/>
				<wcf:param name="storeId" value="${storeId}"/>
				<wcf:param name="productId" value="${productDetails.catalogEntryView[0].uniqueID}"/>
				<wcf:param name="langId" value="${langId}"/>
				<wcf:param name="urlLangId" value="${urlLangId}" />
			</wcf:url>
			<script type="text/javascript">
				console.log('Ref found, redirect to product page');
				SearchJS.updateSearchTermHistoryCookieAndRedirect("<c:out value='${updatedSearchTermHistory}'/>", "${catEntryDisplayUrl}");										
			</script>
		</c:if>
	</c:if>
	
	

	<c:set var="intentSearchTerm" value="${requestScope.intentSearchTerm}" scope="request"/>
	<c:set var="newSearchTerm" value="${requestScope.handledSearchTerm}" scope="request"/>
	<c:set var="newFilterTerm" value="${requestScope.handledFilterTerm}" scope="request"/>
	<c:set var="newManufacturer" value="${requestScope.handledManufacturer}" scope="request"/>
	<c:set var="newAdvancedFacetList" value="${requestScope.handledAdvancedFacetList}" scope="request"/>
	
	<%-- 
		Check if the responseSearchType attribute exists in the request object before checking 
		WCParam as the SearchDisplayCmd can change the searchType. 
		
		If the original search term is enclosed by quotes, the responseSearchType attribute will be 
		set to 1001 (which means exact phrase) by the SearchDisplayCmd 
		
		(Constants are defined in 
		com.ibm.commerce.foundation.internal.server.services.search.metadata.solr.SolrSearchServiceConstants)
	
		The following search types are supported: 
		----------------------------------------------------------------------------------------------------------
			Match type              |   Search Type		|         Description                         
		----------------------------------------------------------------------------------------------------------
		1.  ANY 					|		0			|  INCLUDE products, kits, bundles
									|					|  EXCLUDE product level SKUs and category level SKUs
									|					|
		2.  EXACT					|		1			|  INCLUDE products, kits, bundles
									|					|  EXCLUDE product level SKUs and category level SKUs
									|					|
		3.  ALL						|		2			|  INCLUDE products, kits, bundles
									|					|  EXCLUDE product level SKUs and category level SKUs
									|					|
		4.  NONE					|		3			|  INCLUDE products, kits, bundles
									|					|  EXCLUDE product level SKUs and category level SKUs							
									|					|
		5.  ANY						|		10			|  INCLUDE products, kits, bundles, product level SKUs, category level SKUs
									|					|  EXCLUDE 
									|					|
		6.  EXACT					|		11			|  INCLUDE products, kits, bundles, product level SKUs, category level SKUs
									|					|  EXCLUDE 
									|					|
		7.  ALL						|		12			|  INCLUDE products, kits, bundles, product level SKUs, category level SKUs
									|					|  EXCLUDE 
									|					|
		8.  NONE					|		13			|  INCLUDE products, kits, bundles, product level SKUs, category level SKUs
									|					|  EXCLUDE 
									|					|
		9.  ANY						|		100			|  INCLUDE product level SKUs, category level SKUs
									|					|  EXCLUDE products, kits, bundles	
									|					|
		10.  EXACT					|		101			|  INCLUDE product level SKUs, category level SKUs
									|					|  EXCLUDE products, kits, bundles
									|					|
		11.  ALL					|		102			|  INCLUDE product level SKUs, category level SKUs
									|					|  EXCLUDE products, kits, bundles
									|					|
		12.  NONE					|		103			|  INCLUDE product level SKUs, category level SKUs
									|					|  EXCLUDE products, kits, bundles
									|					|
		13.  ANY					|		1000		|  INCLUDE products, kits, bundles, category level SKUs
									|	  (Default)		|  EXCLUDE product level SKUs
									|					|
		14.  EXACT					|		1001		|  INCLUDE products, kits, bundles, category level SKUs
									|					|  EXCLUDE product level SKUs
									|					|
		15.  ALL					|		1002		|  INCLUDE products, kits, bundles, category level SKUs
									|					|  EXCLUDE product level SKUs
									|					|
		16.  NONE					|		1003		|  INCLUDE products, kits, bundles, category level SKUs
									|					|  EXCLUDE product level SKUs								
									|					|
		17.  ANY					|		10000		|  INCLUDE category level SKUs
									|					|  EXCLUDE products, kits, bundles, product level SKUs
									|					|						
		17.  EXACT					|		10001		|  INCLUDE category level SKUs
									|					|  EXCLUDE products, kits, bundles, product level SKUs						
									|					|						
		18.  ALL					|		10002		|  INCLUDE category level SKUs
									|					|  EXCLUDE products, kits, bundles, product level SKUs	
									|					|						
		19.  NONE					|		10003		|  INCLUDE category level SKUs
									|					|  EXCLUDE products, kits, bundles, product level SKUs	
			
	--%>
	<c:set var="searchType" value="${responseSearchType}" scope="request"/>
	<c:if test="${empty searchType}" >
		<c:set var="searchType" value="${WCParam.searchType}" scope="request"/>
		<c:if test="${empty searchType}" >
		
			<c:set var="searchType" value="1000" scope="request"/>
		</c:if>
	</c:if>
	<c:set var="advancedSearchResult" value="false" scope="request"/>
	<c:set var="recordStart" value="0" scope="request"/>
	<c:set var="recordEnd" value="0" scope="request"/>
	<c:set var="totalCount" value="0" scope="request"/>
	<c:set var="completeIndicator" value="false" scope="request"/>

	<c:choose>
		<c:when test ="${!empty WCParam.categoryId}">
			<c:set var="currentCategoryId" value="${WCParam.categoryId}"/>
		</c:when>
		<c:otherwise>
			<c:set var="currentCategoryId" value="${catUniqueId}"/>
		</c:otherwise>
	</c:choose>

	<%-- Decide on Search profile and navigation view --%>
	<c:set var="includeContentSearch" value="false"/>
	<c:set var="totalContentCount" value="0" scope="request"/>
	<c:choose>
		<c:when test="${WCParam.searchTermScope == 1}">
			<c:set var="searchProfile" value="ECO_findProductsByNameAndShortDescriptionOnly" scope="request"/>
		</c:when>
		<c:when test="${WCParam.searchTermScope == 2}">
			<c:set var="searchProfile" value="ECO_findProductsByNameOnly" scope="request"/>
		</c:when>
		<c:when test="${WCParam.searchTermScope == 3}">
			<c:set var="searchProfile" value="ECO_findProductsByUnstructureOnly" scope="request"/>
		</c:when>	
		<c:otherwise>
			<c:set var="includeContentSearch" value="true"/>
			<%--ECOCEA perf: on a pas besoin ni des attachements ni des attributs --%>
			<c:set var="searchProfile" value="ECO_findProductsBySearchTerm_Summary" scope="request"/>
		</c:otherwise> 
	</c:choose>

	<%-- Retrieve the physical stores ids from the cookie to be used by the SolrSearchInventoryExpressionProvider for inventory rules --%>
	<c:set var="cookieVal" value="${cookie.WC_physicalStores.value}" />
	<c:set var="cookieVal" value="${fn:replace(cookieVal, '%2C', ',' )}" />
	
	<%-- Make a request and get the results --%>



	<%--when category browsing, clicking on facet calls this file which gives null search Term --%>
	<c:set var="searchProfileMinMaxPrice" value="ECO_findMinOrMaxPriceBySearchTerm" />
	<c:if test="${empty intentSearchTerm}">
		<c:set var="restType" value="byCategory/${WCParam.categoryId}" />
		<c:set var="searchProfileMinMaxPrice" value="ECO_findMinOrMaxPriceByCategory" />
	</c:if>
	
	<c:if test="${!empty intentSearchTerm || !empty newManufacturer || !empty paramValues.facet[0] || WCParam.advancedSearch == 1 || empty WCParam.categoryId}">
		<c:set var="searchProfileMinMaxPrice" value="ECO_findMinOrMaxPriceBySearchTerm" />
		<c:set var="restType" value="bySearchTerm/*" />
		<c:set var="term" value="${intentSearchTerm}" />
		<c:if test="${empty intentSearchTerm}">
			<c:set var="term" value="*" />
		</c:if>
		<c:set var="searchProfile" value="ECO_findProductsBySearchTerm_Summary" />
	</c:if> 

	
	<c:set var = "pageNumber" value = "${pageNum}" />
	<c:if test="${empty pageNumber}">
		<c:set var = "pageNumber" value = "0" />
	</c:if>

	<c:choose>
		<c:when test="${not empty sortBy}" >
			<c:set var="orderBytmp" value="${sortBy}" />
		</c:when>
		<c:otherwise>
			<c:set var="orderBytmp" value="${WCParam.orderBy}" />
		</c:otherwise>
	</c:choose>	
	
	<%-- TODO changer l'url du resttag si on veut avoir un traitement different pour les noms des categories ex Fenetres/Fenetres vs Fenetres --%>
	<wcf:rest var="catalogNavigationView1" url="${searchHostNamePath}${searchContextPath}/store/${WCParam.storeId}/productview/${restType}">
		<wcf:param name="pageSize" value="${pageSize}" />
		<wcf:param name="pageNumber" value="${pageNumber + 1}" />
		<wcf:param name="profileName" value="${searchProfile}" />
		<wcf:param name="intentSearchTerm" value="${intentSearchTerm}" />
		<wcf:param name="searchType" value="${searchType}" />
		<wcf:param name="searchSource" value="${WCParam.searchSource}" />
		<wcf:param name="metaData" value="${WCParam.metaData}" />
		<c:if test="${fn:contains(restType, 'bySearchTerm')}">
			<wcf:param name="searchTerm" value="${term}" />
		</c:if>
		<wcf:param name="mm" value="3<-25% 4<-20% 5<-15%" />
		<wcf:param name="qf" value="name^1000 nameOverride^1000  categoryname^500 keyword keywordOverride cas_f*  cai_f* caf_f* shortDescription auxDescription1 mfname defaultSearch" />
		
	    <!--  see dismax parser-->
	    <wcf:param name="stopwords" value="true"/>
	    <wcf:param name="ps" value="15"/><!-- int -->
		<wcf:param name="qs" value="3"/><!-- int -->
		<wcf:param name="pf" value="name^1000 categoryname^500" />
		<wcf:param name="tie" value="0.1" />

		<c:if test="${!empty WCParam.langId}">
			<wcf:param name="langId" value="${WCParam.langId}"/>
		</c:if>
		<c:if test="${empty WCParam.langId}">
			<wcf:param name="langId" value="${langId}"/>
		</c:if>
		<wcf:param name="currency" value="${env_currencyCode}"/>
		<%-- Default sort for CatEntListWidget --%>
		<c:choose>
			<c:when test="${not empty sortBy }" >
				<c:set var="sortParameter" value="${sortBy}" />
			</c:when>
			<c:otherwise>
				<c:set var="sortParameter" value="${WCParam.orderBy}" />
			</c:otherwise>
		</c:choose>
		<wcf:param name="orderBy" value="${sortParameter}" />
		<flow:ifEnabled feature="Target2SellRanking">
			<c:if test="${sortParameter == '6'}">
			<wcf:param name="t2sRanking" value="${t2sRanking}" />
			</c:if>
		</flow:ifEnabled>
		<wcf:param name="responseFormat" value="json"/>		
		<wcf:param name="catalogId" value="${WCParam.catalogId}"/>
		<c:forEach var="facetValue" items="${paramValues.facet}">
			<c:if test="${!empty facetValue}">
				<wcf:param name="facet" value="${facetValue}" />
			</c:if>		
		</c:forEach>
		<c:forEach var="facetLimit" items="${paramValues.facetLimit}">
			<wcf:param name="facetLimit" value="${facetLimit}" />
		</c:forEach>
		<c:forEach var="item" items="${WCParam}"><c:if test="${fn:startsWith(item.key,'min')}">
			<wcf:param name="${item.key}" value="${item.value[0]}"/>
		</c:if></c:forEach>
		<c:forEach var="item" items="${WCParam}"><c:if test="${fn:startsWith(item.key,'max') }">
			<wcf:param name="${item.key}" value="${item.value[0]}"/>
		</c:if></c:forEach>
		<wcf:param name="advancedFacetList" value="${newAdvancedFacetList}"/>
		<wcf:param name="categoryId" value="${currentCategoryId}" />
		<wcf:param name="filterTerm" value="${newFilterTerm}" />
		<wcf:param name="filterType" value="${WCParam.filterType}" />
		<wcf:param name="filterFacet" value="${WCParam.filterFacet}" />
		<wcf:param name="manufacturer" value="${newManufacturer}" />
		<wcf:param name="physicalStoreIds" value="${cookieVal}" />
		<wcf:param name="isProBTP" value="${extendedUserContext.isPro}" />
	</wcf:rest>

	<c:set var="globalcategories" value="${catalogNavigationView1.facetView}" scope="request"/>
	<c:set var="globalfacetsToSort" value="${catalogNavigationView1.facetView}"/>
	<wcf:useBean var="globalfacets" classname="java.util.ArrayList" scope="request"/>
	<c:forEach var="facetField" items="${globalfacetsToSort}">
			<wcf:set target="${globalfacets}" value="${facetField}"/>
	</c:forEach>
	
	<c:set var="globalresults" value="${catalogNavigationView1.catalogEntryView}" scope="request"/>
	<c:set var="globalbreadcrumbs" value="${catalogNavigationView1.breadCrumbTrailView}" scope="request"/>
	<c:set var="globalreport" value="${catalogNavigationView1.metaData.previewReport}" scope="request"/>
	<c:set var="mpe_id" value="${catalogNavigationView1.metaData.espot}" scope="request" />
	<c:set var="intv_id" value="${catalogNavigationView1.metaData.activity}" scope="request" />
	<c:set var="experimentId" value="${catalogNavigationView1.metaData.experiment}" scope="request" />
	<c:set var="testElementId" value="${catalogNavigationView1.metaData.testelement}" scope="request" />
	
	<c:set var="spellcheck" value="${catalogNavigationView1.metaData.spellcheck}" scope="request"/>
	<c:set var="totalCount" value="${catalogNavigationView1.recordSetTotal}" scope="request"/>
	<c:set var="searchTerm" value="${responseSearchTerm}" scope="request"/>
	<c:set var="searchMissed" value="false" scope="request"/>
	<c:set var="globalpricemode" value="${catalogNavigationView1.metaData.price}" scope="request"/>
	<wcf:rest var="minPriceRequest" url="${searchHostNamePath}${searchContextPath}/store/${WCParam.storeId}/productview/${restType}" >
		<wcf:param name="searchType" value="1000" />
		<wcf:param name="searchSource" value="E" />
		<c:if test="${fn:contains(restType, 'bySearchTerm')}">
			<wcf:param name="searchTerm" value="${term}" />
		</c:if>		
		<wcf:param name="langId" value="${WCParam.langId}"/>
		<wcf:param name="currency" value="${env_currencyCode}"/>
		<wcf:param name="responseFormat" value="json"/>		
		<wcf:param name="catalogId" value="${WCParam.catalogId}"/>
		<wcf:param name="manufacturer" value="${newManufacturer}" />
		<wcf:param name="profileName" value="${searchProfileMinMaxPrice}" />
		<wcf:param name="orderBy" value="priceAsc" />
		<c:forEach var="facetValue" items="${paramValues.facet}">
			<c:if test="${!empty facetValue}">
				<wcf:param name="facet" value="${facetValue}" />
			</c:if>		
		</c:forEach>
		<c:forEach var="facetLimit" items="${paramValues.facetLimit}">
			<wcf:param name="facetLimit" value="${facetLimit}" />
		</c:forEach>
		<c:forEach var="item" items="${WCParam}"><c:if test="${fn:startsWith(item.key,'min')}">
			<wcf:param name="${item.key}" value="${item.value[0]}"/>
		</c:if></c:forEach>
		<c:forEach var="item" items="${WCParam}"><c:if test="${fn:startsWith(item.key,'max') }">
			<wcf:param name="${item.key}" value="${item.value[0]}"/>
		</c:if></c:forEach>
		<wcf:param name="advancedFacetList" value="${newAdvancedFacetList}"/>
		<wcf:param name="categoryId" value="${currentCategoryId}" />
		<wcf:param name="filterTerm" value="${newFilterTerm}" />
		<wcf:param name="filterType" value="${WCParam.filterType}" />
		<wcf:param name="filterFacet" value="${WCParam.filterFacet}" />
		<wcf:param name="manufacturer" value="${newManufacturer}" />
		<wcf:param name="physicalStoreIds" value="${cookieVal}" />
		<wcf:param name="isProBTP" value="${extendedUserContext.isPro}" />
	</wcf:rest>
	<wcf:rest var="maxPriceRequest" url="${searchHostNamePath}${searchContextPath}/store/${WCParam.storeId}/productview/${restType}" >
		<wcf:param name="searchType" value="1000" />
		<wcf:param name="searchSource" value="E" />
		<c:if test="${fn:contains(restType, 'bySearchTerm')}">
			<wcf:param name="searchTerm" value="${term}" />
		</c:if>
		<wcf:param name="langId" value="${WCParam.langId}"/>
		<wcf:param name="currency" value="${env_currencyCode}"/>
		<wcf:param name="responseFormat" value="json"/>		
		<wcf:param name="catalogId" value="${WCParam.catalogId}"/>
		<wcf:param name="manufacturer" value="${newManufacturer}" />
		<wcf:param name="profileName" value="${searchProfileMinMaxPrice}" />
		<wcf:param name="orderBy" value="priceDesc" />
		<c:forEach var="facetValue" items="${paramValues.facet}">
			<c:if test="${!empty facetValue}">
				<wcf:param name="facet" value="${facetValue}" />
			</c:if>		
		</c:forEach>
		<c:forEach var="facetLimit" items="${paramValues.facetLimit}">
			<wcf:param name="facetLimit" value="${facetLimit}" />
		</c:forEach>
		<c:forEach var="item" items="${WCParam}"><c:if test="${fn:startsWith(item.key,'min')}">
			<wcf:param name="${item.key}" value="${item.value[0]}"/>
		</c:if></c:forEach>
		<c:forEach var="item" items="${WCParam}"><c:if test="${fn:startsWith(item.key,'max') }">
			<wcf:param name="${item.key}" value="${item.value[0]}"/>
		</c:if></c:forEach>
		<wcf:param name="advancedFacetList" value="${newAdvancedFacetList}"/>
		<wcf:param name="categoryId" value="${currentCategoryId}" />
		<wcf:param name="filterTerm" value="${newFilterTerm}" />
		<wcf:param name="filterType" value="${WCParam.filterType}" />
		<wcf:param name="filterFacet" value="${WCParam.filterFacet}" />
		<wcf:param name="manufacturer" value="${newManufacturer}" />
		<wcf:param name="physicalStoreIds" value="${cookieVal}" />
		<wcf:param name="isProBTP" value="${extendedUserContext.isPro}" />
	</wcf:rest>
	
	<c:set var="minPrice" value="${minPriceRequest.priceBound}"/>
	<c:set var="maxPrice" value="${maxPriceRequest.priceBound}"/>
<%-- TODO desactiver les 2 lignes ci-dessous si on ne veut pas d'arrondi sur les prix --%>
	<fmt:formatNumber value="${minPrice-(minPrice%1)}" type="number" pattern="#" var="formattedMinPrice"/><%-- Floor the min price  --%>
	<fmt:formatNumber value="${maxPrice+(1-(maxPrice%1))%1}" type="number" pattern="#" var="formattedMaxPrice"/><%-- Ceil the max price  --%>
	
	<c:set var="priceFacetFilterRange" value="${formattedMinPrice};${formattedMaxPrice}" scope="request" />
	<c:set var="priceFacetFilterMin" value="${formattedMinPrice}" scope="request" />
	<c:set var="priceFacetFilterMax" value="${formattedMaxPrice}" scope="request" />
	<c:set var="mustDisplayPriceDisplay" value="${((formattedMaxPrice - formattedMinPrice) <= 2 ) ? false : true}" scope="request"/>

	<%
			Cookie priceModeCookie = new Cookie("priceMode", (String) request.getAttribute("globalpricemode"));
			priceModeCookie.setPath("/");
			response.addCookie(priceModeCookie);
	%>

	<%-- For same search term do a content search --%>
	<c:if test="${includeContentSearch && !empty newSearchTerm && (empty searchForContent || searchForContent eq 'true')}">
		<c:set var="contentSearchTerm" value="${newSearchTerm}" scope="request"/>
<%-- 		<%@ include file="/Widgets/Common/SearchContentSetup.jspf" %> --%>
		<%@ include file="/Widgets-lapeyre/Common/SearchCrossContentSetup.jspf" %>
	</c:if>
	<c:set var="totalSearchCount" value="${totalCount + totalContentCount}" scope="request"/>
	<c:set var="originalTotalSearchCount" value="${totalSearchCount}" scope="request"/> <%-- When we do search again, totalSearchCount will be updated. Save it for further use --%>
	<c:set var="originalSearchTerm" value="${intentSearchTerm}" scope="request"/> <%-- When we do search again, searchTerm will be updated. Save it for further use --%>
	<%-- 
	contentspellcheck currently missing needs to be added back in
	<c:if test="${totalSearchCount eq 0 && !(empty spellcheck && empty contentspellcheck)}" > 
	--%>
	
	<!--spellcheck=${spellcheck}  -->
    <%-- Si le spellCheck n'est pas vide et que le resultat de la partie produit = 0, on ne fait rien automatiquement. Mais on affichera un message de suggestion --%>
	<c:if test="${totalCount eq 0 && !empty spellcheck}" >
		<c:set var="contentSuggered"  value="true" scope="request"/>
	</c:if>

	<c:if test="${! empty statisticsResultPagesTrackingThreshold && statisticsResultPagesTrackingThreshold * pageSize <= beginIndex}">
		<!-- Exceeded threshold for tracking search rules -->
		<c:remove var="experimentId" />
	</c:if>
	
	
	<flow:ifEnabled feature="Analytics">
	
		<%@ include file="/Widgets/Common/AnalyticsSearch.jspf" %>
	</flow:ifEnabled>
	
	

</c:if>
<!-- END SearchSetup.jspf-->
