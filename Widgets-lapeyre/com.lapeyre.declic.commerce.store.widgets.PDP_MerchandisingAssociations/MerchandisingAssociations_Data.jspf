<%--
 =================================================================
  Licensed Materials - Property of IBM

  WebSphere Commerce

  (C) Copyright IBM Corp. 2011, 2013 All Rights Reserved.

  US Government Users Restricted Rights - Use, duplication or
  disclosure restricted by GSA ADP Schedule Contract with
  IBM Corp.
 =================================================================
--%>

<c:set var="search" value='"'/>
<c:set var="replaceStr" value="'"/>
<c:set var="search01" value="'"/>
<c:set var="search02" value='"'/>
<c:set var="replaceStr01" value="\\\\'"/>
<c:set var="replaceStr02" value='\\\\"'/>

<c:if test="${empty productId}">
	<c:choose>
		<c:when test="${!empty param.productId}">
			<c:set var="productId" value="${param.productId}" />
		</c:when>
		<c:when test="${!empty WCParam.productId}">
			<c:set var="productId" value="${WCParam.productId}" />
		</c:when>
	</c:choose>
</c:if>
<c:set var="parentCatEntryId" value="${productId}"/>
<c:set var="assocType" value="${param.assocType}" />
<c:set var="widgetSuffix" value="${!empty param.widgetSuffix ? param.widgetSuffix : ''}" />

<%-- ECOCEA perf: pas utile ici normalement --%>
<%-- <%@ include file="/Widgets-lapeyre/Common/PDP_CatalogEntryData.jspf" %> --%>

<c:set var="uniqueID" value="${productId}"/>
<c:set var="catalogEntryView" value="${catalogEntryDetails}"/>

<wcf:useBean var="merchandisingAssociations" classname="java.util.ArrayList"/>
<c:set var="fullMerchandisingAssociations" value="${catalogEntryView.merchandisingAssociations}"/>
<c:if test="${empty fullMerchandisingAssociations}">
	<%-- Try to get it from our internal hashMap --%>
	<c:set var="key1" value="${productId}+getCatalogEntryViewMerchandisingAssocByID"/>
	<c:set var="catalogEntryDetailsAssoc" value="${cachedCatalogEntryDetailsMap[key1]}"/>
	<c:if test="${empty catalogEntryDetailsAssoc}">
		<wcf:rest var="catalogNavigationViewAssoc" url="${searchHostNamePath}${searchContextPath}/store/${WCParam.storeId}/productview/byId/${productId}" >	
			<wcf:param name="langId" value="${langId}"/>
			<wcf:param name="currency" value="${env_currencyCode}"/>
			<wcf:param name="responseFormat" value="json"/>		
			<wcf:param name="catalogId" value="${WCParam.catalogId}"/>
			<%--ECOCEA perf : ici on a besoin juste des infos minimum (pas d'attribut ni d'attachment, ni de skus) --%>
			<wcf:param name="profileName" value="ECO_findProductByIdsMerchandisingAssociation" />
		</wcf:rest>
		<c:set var="catalogEntryDetailsAssoc" value="${catalogNavigationViewAssoc.catalogEntryView[0]}"/>
		<wcf:set target = "${cachedCatalogEntryDetailsMap}" key="${key1}" value="${catalogNavigationViewAssoc.catalogEntryView[0]}"/>
	</c:if>
	<c:set var="catalogEntryView" value="${catalogEntryDetailsAssoc}"/>
	<c:set var="fullMerchandisingAssociations" value="${catalogEntryDetailsAssoc.merchandisingAssociations}" />
</c:if>

<c:forEach var="fullMerchandisingAssociation" items="${fullMerchandisingAssociations}">
	<c:if test="${fullMerchandisingAssociation.associationType eq assocType}">
		<wcf:set target="${merchandisingAssociations}" value="${fullMerchandisingAssociation}" />
	</c:if>
</c:forEach>

<c:set var="hasAssociations" value="${!empty merchandisingAssociations[0]}" scope="request" />
<c:set var="hasMultipleAssociations" value="${!empty merchandisingAssociations[1]}"/>

<c:if test="${hasAssociations}">
	<c:set var="catalogEntryName" value="${catalogEntryView.name}"/>
	<c:choose>
		<c:when test="${(fn:startsWith(catalogEntryView.thumbnail, 'http://') || fn:startsWith(catalogEntryView.thumbnail, 'https://'))}">
			<wcst:resolveContentURL var="catalogEntryThumbnail" url="${catalogEntryView.thumbnail}"/>
		</c:when>
		<c:otherwise>
			<c:set var="catalogEntryThumbnail" value="${catalogEntryView.thumbnail}" />
		</c:otherwise>
	</c:choose>
	<c:set var="firstMerchandisingAssociationName" value="${merchandisingAssociations[0].catalogEntryView.name}"/>
	<c:set var="firstMerchandisingAssociationID" value="${merchandisingAssociations[0].catalogEntryView.uniqueID}"/>
	<c:set var="firstMerchandisingAssociationShortDesc" value="${merchandisingAssociations[0].catalogEntryView.shortDescription}"/>
	<c:choose>
		<c:when test="${(fn:startsWith(merchandisingAssociations[0].thumbnail, 'http://') || fn:startsWith(merchandisingAssociations[0].thumbnail, 'https://'))}">
			<wcst:resolveContentURL var="firstMerchandisingAssociationThumbnail" url="${merchandisingAssociations[0].thumbnail}"/>
		</c:when>
		<c:otherwise>
			<c:set var="firstMerchandisingAssociationThumbnail" value="${merchandisingAssociations[0].thumbnail}" />
		</c:otherwise>
	</c:choose>

	<%-- 'L' stands form List price, pick the list price and offer price of the baseItem --%>
	<c:choose>
		<c:when test="${catalogEntryView.price[0].description eq 'L'}">
			<c:set var="baseItemListedPrice" value="${catalogEntryView.price[0].value}"/>
			<c:set var="baseItemOfferedPrice" value="${catalogEntryView.price[1].value}"/>
		</c:when>
		<c:otherwise>
			<c:set var="baseItemOfferedPrice" value="${catalogEntryView.price[0].value}"/>
			<c:set var="baseItemListedPrice" value="${catalogEntryView.price[1].value}"/>
		</c:otherwise>
	</c:choose>
	
	<%-- If the listed price is less than or equal to offered price, 
	then listed price should not be displayed --%>
	<c:if test="${firstListedCombinedTotal le firstOfferedCombinedTotal}">
		<c:set var="firstListedCombinedTotal" value=""/>
	</c:if>
	
	<%-- To hold the association in a map --%>
	<jsp:useBean id="merchandisingAssociationMap" class="java.util.LinkedHashMap" type="java.util.Map"/>
	
	<c:forEach var="merchandisingAssociation" items="${merchandisingAssociations}" varStatus="status">
		<%-- 'L' stands for list price, pick the list price of the merchandising association and add 
		it to the base item list price. Also pick the offer price of the merchandising association and 
		add it to the base item offer price to get the combined price. --%>
		<c:choose>
			<c:when test="${merchandisingAssociation.price[0].description eq 'L'}">
				<c:set var="listedCombinedPrice" value="${baseItemListedPrice + merchandisingAssociation.price[0].value}"/>
				<c:set var="offeredCombinedPrice" value="${baseItemOfferedPrice + merchandisingAssociation.price[1].value}"/>
				<c:set var="offerPrice" value="${merchandisingAssociation.catalogEntryView.price[1].value}"/>
			</c:when>
			<c:otherwise>
				<c:set var="offerPrice" value="${merchandisingAssociation.price[0].value}"/>
				<c:set var="offeredCombinedPrice" value="${baseItemOfferedPrice + merchandisingAssociation.price[0].value}"/>
				<c:set var="listedCombinedPrice" value="${baseItemListedPrice + merchandisingAssociation.price[1].value}"/>
			</c:otherwise>
		</c:choose>
		
		<%-- Formatting the price to display with currency symbol --%>
		<c:set var="lcPrice" value=""/>
		<c:if test="${listedCombinedPrice gt offeredCombinedPrice}">
			<fmt:formatNumber var="lcPrice" value="${listedCombinedPrice}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
		</c:if>
		<fmt:formatNumber var="ocPrice" value="${offeredCombinedPrice}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
		<fmt:formatNumber var="skuOfferPrice" value="${offerPrice}" type="currency" currencySymbol="${env_CurrencySymbolToFormat}" maxFractionDigits="${env_currencyDecimal}"/>
		
		<%-- If the associated item is a ProductBean and it has only one SKU, then it is as good as ItemBean.
		So identify the uniqueID of the single SKU and mark it as ItemBean --%>
		<c:choose>
			<c:when test="${merchandisingAssociation.catalogEntryTypeCode eq 'ProductBean' and merchandisingAssociation.hasSingleSKU}">
				<c:set var="maUniqueID" value="${merchandisingAssociation.sKUs[0].uniqueID}"/>

				<c:set var="type" value="ItemBean"/>
			</c:when>
			<c:otherwise>
				<c:set var="maUniqueID" value="${merchandisingAssociation.uniqueID}"/>
				<c:set var="type" value="${merchandisingAssociation.catalogEntryTypeCode}"/>
			</c:otherwise>
		</c:choose>
		<c:set var="componentItems" value=""/>
		
		
		<%-- Associated items url --%>
		<wcf:url var="catalogEntryUrl" patternName="ProductURL" value="Product2">
			<wcf:param name="catalogId" value="${catalogId}"/>
			<wcf:param name="storeId" value="${storeId}"/>
			<wcf:param name="productId" value="${maUniqueID}"/>
			<wcf:param name="langId" value="${langId}"/>
			<wcf:param name="errorViewName" value="ProductDisplayErrorView"/>
			<wcf:param name="urlLangId" value="${urlLangId}" />
		</wcf:url>
		
		<%-- Pick the first combined prices and keep it to display initially --%>
		<c:if test="${status.count == 1}">
			<c:set var="firstListedCombinedTotal" value="${lcPrice}"/>
			<c:set var="firstOfferedCombinedTotal" value="${ocPrice}"/>
			<c:set var="firstMerchandisingAssociationUrl" value="${catalogEntryUrl}"/>
		</c:if>
		
		<%-- id, type, name, thumbnail, price and components are stored as json object 
		format against the uniqueID as key in the merchandisingAssociationMap --%>
		<c:set var="singleQuote" value="'"/>
		<c:set var="escapeSingleQuote" value="\\\\'"/>
		<c:choose>
			<c:when test="${(fn:startsWith(merchandisingAssociation.thumbnail, 'http://') || fn:startsWith(merchandisingAssociation.thumbnail, 'https://'))}">
				<wcst:resolveContentURL var="thumbnail" url="${merchandisingAssociation.thumbnail}"/>
			</c:when>
			<c:otherwise>
				<c:set var="thumbnail" value="${merchandisingAssociation.thumbnail}"/>
			</c:otherwise>
		</c:choose>
		<c:set target="${merchandisingAssociationMap}" property="${maUniqueID}" 
			value="{id: '${maUniqueID}',
					type: '${type}',
					name: '${fn:replace(merchandisingAssociation.name, singleQuote, escapeSingleQuote)}',
					shortDesc: '${fn:replace(merchandisingAssociation.shortDescription, singleQuote, escapeSingleQuote)}',
					thumbnail: '${fn:replace(thumbnail, singleQuote, escapeSingleQuote)}',
					url: '${fn:replace(catalogEntryUrl, singleQuote, escapeSingleQuote)}',
					listedCombinedPrice: '${lcPrice}',
					offeredCombinedPrice: '${ocPrice}',
					skuOfferPrice: '${skuOfferPrice}',
					components: [${componentItems}],
					quantity: '${merchandisingAssociation.quantity}',
					productId: '${merchandisingAssociation.uniqueID}'}"/>
	</c:forEach>

	<%-- Keep the store specific parameters like storeId, catalogId and langId in json object format --%>
	<c:set var="storeParams" value="{storeId: '${fn:escapeXml(storeId)}',catalogId: '${fn:escapeXml(catalogId)}',langId: '${fn:escapeXml(langId)}'}"/>
	<c:set var="baseComponentItems" value=""/>
	<c:set var="skus" value=""/>
	<c:choose>
		<c:when test="${catalogEntryView.catalogEntryTypeCode eq 'ProductBean'}">
			<c:choose>
				<%-- If the base item is a ProductBean and it has only one SKU, then it is as good as ItemBean.
				So identify the uniqueID of the single SKU and mark it as ItemBean --%>
				<c:when test="${catalogEntryView.hasSingleSKU}">
					<c:set var="baseItemId" value="${catalogEntryView.sKUs[0].uniqueID}"/>
					<c:set var="baseItemType" value="ItemBean"/>
				</c:when>
				<c:otherwise>
					<c:set var="baseItemId" value="${uniqueID}"/>
					<c:set var="baseItemType" value="${catalogEntryView.catalogEntryTypeCode}"/>
					<%-- Pick the SKUs and the corresponding attributes --%>
					<c:forEach var="sku" items="${catalogEntryView.sKUs}">
						<c:if test="${!empty skus}">
							<c:set var="skus" value="${skus},"/>
						</c:if>
						<c:set var="attributes" value=""/>
						<c:forEach var="skuAttribute" items="${sku.attributes}">
							<c:if test="${skuAttribute.usage eq 'Defining'}">
								<c:if test="${!empty attributes}">
									<c:set var="attributes" value="${attributes},"/>
								</c:if>
								<c:set var="attributes" value="${attributes}'${fn:replace(skuAttribute.name, search01, replaceStr01)}': '${skuAttribute.values[0].value}'"/>
							</c:if>
						</c:forEach>
						<c:set var="skus" value="${skus}{id: '${sku.uniqueID}', attributes: {${attributes}}}"/>
					</c:forEach>
				</c:otherwise>
			</c:choose>
		</c:when>
		
		<c:otherwise>
			<c:set var="baseItemId" value="${uniqueID}"/>
			<c:set var="baseItemType" value="${catalogEntryView.catalogEntryTypeCode}"/>
		</c:otherwise>
	</c:choose>
	<c:set var="baseItemParams" value="{id: '${baseItemId}', type: '${baseItemType}', components: [${baseComponentItems}], skus: [${skus}], productId: '${uniqueID}'}"/>
</c:if>

<c:if test="${!hasAssociations}" >
	<c:set var="emptyWidget" value="true" />
</c:if>
<c:set var="columnCountByWidth" value="${!empty param.columnCountByWidth ? param.columnCountByWidth : '{0:1,420:2,630:3,840:4}'}"/>
